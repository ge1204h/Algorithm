// BOJ_10989.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include "pch.h"
#include <iostream>

//!< 수 정렬하기 3
//!< 목표 20분 : 결과 시간초과 : 계수정렬에 대한 이해 필요 - 20.06.30 : 1 try
//!< 계수정렬 : 배열의 인덱스를 특정한 데이터의 값으로 여기는 정렬방법, 배열의 크기는 데이터의 범위를 포함 할 수 있도록 설정, 데이터의 등장 횟수를 센다.
//!< 목표 20분 : 결과 10분 13초 : 20.07.26
using namespace std;
int main()
{
	//!< cin, cout은 scanf, printf보다 속도가 느리기 때문에 시간초과가 난다.
	//!< 따라서 sync_with_stdio을 사용하여 실행속도를 향상시킨다. : C 표준 stream과 C++ 표준 stream의 동기화를 끊음. 동기화를 끊으면 사용하는 버퍼의 수가 줄어들어 속도는 향상. 하지만 thread의 싱크가  unsafe 해지므로 예상치못한 순서의 입출력이 나올수 있으며, thread가 여러개인 환경에서는 위험하다.
	//!< tie : cin과 cout을 untie한다. C표준 입출력과 혼용해서 사용하면 안됨!
	ios_base::sync_with_stdio( false );
	cin.tie( NULL );
	cout.tie( NULL );

	int n;
	cin >> n;

	int arr[ 10001 ] = { 0 };

	for ( int i = 0; i < n; i++ )
	{
		int x;
		cin >> x;

		arr[ x ] += 1;
	}

	for ( int i = 0; i < 10001; i++ )
	{
		if ( arr[ i ] == 0 )
			continue;

		for ( int j = 0; j < arr[ i ]; j++ )
		{
			cout << i << '\n';
		}
	}
}

// 프로그램 실행: <Ctrl+F5> 또는 [디버그] > [디버깅하지 않고 시작] 메뉴
// 프로그램 디버그: <F5> 키 또는 [디버그] > [디버깅 시작] 메뉴

// 시작을 위한 팁: 
//   1. [솔루션 탐색기] 창을 사용하여 파일을 추가/관리합니다.
//   2. [팀 탐색기] 창을 사용하여 소스 제어에 연결합니다.
//   3. [출력] 창을 사용하여 빌드 출력 및 기타 메시지를 확인합니다.
//   4. [오류 목록] 창을 사용하여 오류를 봅니다.
//   5. [프로젝트] > [새 항목 추가]로 이동하여 새 코드 파일을 만들거나, [프로젝트] > [기존 항목 추가]로 이동하여 기존 코드 파일을 프로젝트에 추가합니다.
//   6. 나중에 이 프로젝트를 다시 열려면 [파일] > [열기] > [프로젝트]로 이동하고 .sln 파일을 선택합니다.
